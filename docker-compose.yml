services:
  finapp_api:
    image: finapp_api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Server=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
#      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_ENVIRONMENT=Production
    env_file:
      - .env
    depends_on:
      - finapp_db
    restart: always

  finapp_db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - finapp_data:/var/lib/postgresql/data
      
  finapp_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - ./frontend/build:/usr/share/nginx/html  # Serve the build direct
    ports: 
#      - "3000:3000"
      - "80:80"
    depends_on:
      - finapp_api
      - finapp_db
    restart: always
      

#  finapp_nginx:
#    build: ./nginx
#    volumes:
#      - ./frontend/build:/usr/share/nginx/html  # Serve the React app build
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Custom Nginx configuration
#    ports:
#      - "80:80" 
#    depends_on:
#      - finapp_frontend
#      - finapp_api
#          
volumes: 
  finapp_data:
        
