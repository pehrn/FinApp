services:
  finapp_api:
    image: finapp_api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Server=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=1
    volumes:
      - ./FinApp.Api:/app/FinApp.Api
    working_dir: /app/FinApp.Api
    env_file:
      - .env
    depends_on:
      - finapp_db
    restart: always
    command: dotnet watch --no-hot-reload --project FinApp.Api.csproj run --urls=http://0.0.0.0:5000
  
  
  finapp_db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - finapp_data:/var/lib/postgresql/data
      
  finapp_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports: 
      - "8080:80"
    depends_on:
      - finapp_api
      - finapp_db
    restart: always
      
#          
volumes: 
  finapp_data:
        
