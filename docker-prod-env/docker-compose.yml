services:
  
  finapp_api:
    image: finapp_api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Server=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Production
    env_file:
      - .env
    depends_on:
      - finapp_db
    restart: always

  finapp_db:
    image: postgres:17.5-bullseye
    restart: always
    env_file: .env
    volumes:
      - finapp_data:/var/lib/postgresql/data
        
  pgadmin:
   container_name: pgadmin4_container
   image: dpage/pgadmin4
   restart: always
   ports:
     - "5050:81"
   environment:
     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
     PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
   depends_on:
     - finapp_db
   volumes:
     - pgadmin:/var/lib/pgadmin
  
  finapp_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - finapp_api
      - finapp_db
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  finapp_nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - finapp_frontend
      - finapp_api
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  ef_migrations:
    profiles: ["migrations"]
    build:
      context: .
      target: build
    volumes:
      - .:/src
    working_dir: /src/FinApp.Api
    entrypoint: ["sh", "-c"]
    command: ["export PATH=$PATH:/root/.dotnet/tools && dotnet ef database update --no-build"]
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Server=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
    depends_on:
      - finapp_db

volumes:
  finapp_data:
  pgadmin:

        
